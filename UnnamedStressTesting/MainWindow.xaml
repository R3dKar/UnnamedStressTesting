<Window x:Class="UnnamedStressTesting.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:UnnamedStressTesting"
        xmlns:fa5="http://schemas.fontawesome.com/icons/"
        xmlns:system="clr-namespace:System;assembly=mscorlib"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800">
    <Window.DataContext>
        <local:MainWindowViewModel/>
    </Window.DataContext>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <Grid x:Name="leftMenuGrid" Grid.Column="0" Margin="5" Width="{Binding LeftMenuWidth, Mode=OneTime}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <!-- Кнопки -->
            <Grid Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Button Grid.Column="0" Command="{Binding OpenDictionaryFolderCommand}" Content="{StaticResource FolderOpenIcon}" ToolTip="Открыть папку со словарями" Margin="0 0 2.5 5"/>
                <Button Grid.Column="1" Command="{Binding RefreshWordCommand}" Content="{StaticResource RefreshIcon}" ToolTip="Обновить словари" Margin="2.5 0 0 5"/>
            </Grid>

            <!-- Список элементов -->
            <TreeView Grid.Row="1"  ItemsSource="{Binding Items}" SelectedItemChanged="WordsTreeView_SelectedItemChanged">
                <TreeView.Resources>
                    <Style TargetType="{x:Type TreeViewItem}">
                        <Setter Property="IsExpanded" Value="{Binding Items, Converter={local:ItemsToIsExpandedConverter}}"/>
                    </Style>
                </TreeView.Resources>
                <TreeView.ItemTemplate>
                    <HierarchicalDataTemplate ItemsSource="{Binding Items}">
                        <StackPanel Orientation="Horizontal">
                            <CheckBox Margin="0 0 3 0" IsChecked="{Binding Enabled, Mode=TwoWay}"/>
                            <TextBlock Text="{Binding Preview}" ToolTip="{Binding Comment}"/>
                        </StackPanel>
                    </HierarchicalDataTemplate>
                </TreeView.ItemTemplate>
                <TreeView.Template>
                    <ControlTemplate>
                        <Border BorderThickness="1" BorderBrush="LightGray">
                            <ScrollViewer VerticalScrollBarVisibility="Visible">
                                <ItemsPresenter/>
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </TreeView.Template>
            </TreeView>
        </Grid>

        <Grid Grid.Column="1" Margin="5">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <!-- Слово -->
            <Viewbox x:Name="rightSideWord" Grid.Row="0">
                <ItemsControl ItemsSource="{Binding SelectedItem.Letters}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Horizontal"/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Grid>
                                <Button Content="{Binding UppercaseString}" Foreground="{Binding Color}" Cursor="{Binding Cursor}">
                                    <Button.Template>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Grid>
                                                <TextBlock Text="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}"/>
                                                <TextBlock Name="stressMarker" Margin="0 -4 0 4" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="Center" VerticalAlignment="Top" Text="′">
                                                    <TextBlock.Visibility>
                                                        <MultiBinding Converter="{local:StressVisibilityMultiConverter}">
                                                            <Binding Path="DataContext.IsStressed" RelativeSource="{RelativeSource TemplatedParent}"/>
                                                            <Binding Path="DataContext.IsVowel" RelativeSource="{RelativeSource TemplatedParent}"/>
                                                            <Binding Path="IsMouseOver" RelativeSource="{RelativeSource TemplatedParent}"/>
                                                            <Binding Path="DataContext.IsTestStarted" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}"/>
                                                        </MultiBinding>
                                                    </TextBlock.Visibility>
                                                    <TextBlock.RenderTransform>
                                                        <TransformGroup>
                                                            <TranslateTransform X="3"/>
                                                            <RotateTransform Angle="20"/>
                                                        </TransformGroup>
                                                    </TextBlock.RenderTransform>
                                                </TextBlock>
                                            </Grid>
                                            <!-- TODO: добавить команды в тесте для букв, стадию показа ответа, анимацию для неверной буквы -->
                                            <ControlTemplate.Triggers>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource TemplatedParent}}" Value="True"/>
                                                        <Condition Binding="{Binding DataContext.IsTestStarted, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}" Value="True"/>
                                                    </MultiDataTrigger.Conditions>
                                                    <MultiDataTrigger.EnterActions>
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <DoubleAnimation Storyboard.TargetName="stressMarker" Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.3" DecelerationRatio="0.9"/>
                                                                <ThicknessAnimation Storyboard.TargetName="stressMarker" Storyboard.TargetProperty="Margin" From="0 0 0 0" To="0 -4 0 4" Duration="0:0:0.1" DecelerationRatio="0.9"/>
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </MultiDataTrigger.EnterActions>
                                                </MultiDataTrigger>
                                                <!--<EventTrigger RoutedEvent="MouseEnter">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimation Storyboard.TargetName="stressMarker" Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.3" DecelerationRatio="0.9"/>
                                                            <ThicknessAnimation Storyboard.TargetName="stressMarker" Storyboard.TargetProperty="Margin" From="0 0 0 0" To="0 -4 0 4" Duration="0:0:0.1" DecelerationRatio="0.9"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>-->
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Button.Template>
                                    <!--<TextBlock Text="{Binding Uppercase}">
                                        <TextBlock.Foreground>
                                            <SolidColorBrush Color="{Binding Color}"/>
                                        </TextBlock.Foreground>
                                    </TextBlock>-->
                                </Button>
                            </Grid>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </Viewbox>

            <!-- Кнопка запуска теста -->
            <Button Grid.Row="1" IsEnabled="{Binding IsEnabledWordEmpty, Converter={local:ReverseBooleanConverter}}" Height="50" Command="{Binding StartTestingCommand}" HorizontalAlignment="Center" Cursor="Hand" Visibility="{Binding IsTestStarted, Converter={local:BooleanToVisibilityConverter}, ConverterParameter=True}" ToolTip="Выберете слова из списка слева" ToolTipService.ShowOnDisabled="True" ToolTipService.IsEnabled="{Binding IsEnabledWordEmpty}">
                <Button.Style>
                    <Style TargetType="{x:Type Button}">
                        <Style.Triggers>
                            <EventTrigger RoutedEvent="MouseEnter">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetProperty="Foreground.Color" To="{StaticResource StartColor}" Duration="0:0:0.2" DecelerationRatio="0.9"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="MouseLeave">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetProperty="Foreground.Color" To="Black" Duration="0:0:0.2" DecelerationRatio="0.9"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Foreground" Value="{StaticResource StartPressedColorBrush }"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.7"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>

                <Button.Template>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <ContentPresenter/>
                    </ControlTemplate>
                </Button.Template>

                <Button.Content>
                    <Viewbox>
                        <StackPanel Orientation="Horizontal">
                            <ContentControl Content="{StaticResource StartIcon}"/>
                            <TextBlock Text="Начать тест" FontWeight="Medium" FontSize="18" TextAlignment="Center" Margin="6 0 0 0"/>
                        </StackPanel>
                    </Viewbox>
                </Button.Content>
            </Button>

            <!-- Кнопка остановки теста -->
            <Button Grid.Row="1" Height="50" Command="{Binding StopTestingCommand}" HorizontalAlignment="Center" Cursor="Hand" Visibility="{Binding IsTestStarted, Converter={local:BooleanToVisibilityConverter}, ConverterParameter=False}">
                <Button.Style>
                    <Style TargetType="{x:Type Button}">
                        <Style.Triggers>
                            <EventTrigger RoutedEvent="MouseEnter">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetProperty="Foreground.Color" To="{StaticResource StopColor}" Duration="0:0:0.2" DecelerationRatio="0.9"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="MouseLeave">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetProperty="Foreground.Color" To="Black" Duration="0:0:0.2" DecelerationRatio="0.9"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Foreground" Value="{StaticResource StopPressedColorBrush }"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.7"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>

                <Button.Template>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <ContentPresenter/>
                    </ControlTemplate>
                </Button.Template>

                <Button.Content>
                    <Viewbox>
                        <StackPanel Orientation="Horizontal">
                            <ContentControl Content="{StaticResource StopIcon}"/>
                            <TextBlock Text="Завершить тест" FontWeight="Medium" FontSize="18" TextAlignment="Center" Margin="4 0 0 0"/>
                        </StackPanel>
                    </Viewbox>
                </Button.Content>
            </Button>
        </Grid>
    </Grid>
</Window>
